{"remainingRequest":"C:\\Users\\tienanh\\Desktop\\Demo_Vue2_GITHUB\\Demo_Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tienanh\\Desktop\\Demo_Vue2_GITHUB\\Demo_Vue\\src\\components\\Base\\BaseCombobox.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\tienanh\\Desktop\\Demo_Vue2_GITHUB\\Demo_Vue\\src\\components\\Base\\BaseCombobox.vue","mtime":1635992995482},{"path":"C:\\Users\\tienanh\\Desktop\\Demo_Vue2_GITHUB\\Demo_Vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1635681448118},{"path":"C:\\Users\\tienanh\\Desktop\\Demo_Vue2_GITHUB\\Demo_Vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1635681450634},{"path":"C:\\Users\\tienanh\\Desktop\\Demo_Vue2_GITHUB\\Demo_Vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1635681448427},{"path":"C:\\Users\\tienanh\\Desktop\\Demo_Vue2_GITHUB\\Demo_Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635681448612},{"path":"C:\\Users\\tienanh\\Desktop\\Demo_Vue2_GITHUB\\Demo_Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1635681448989}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAiLi4vLi4vc3R5bGVzL0NvbW1vbi9jb21tb24uY3NzIjsNCg=="},{"version":3,"sources":["BaseCombobox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA","file":"BaseCombobox.vue","sourceRoot":"src/components/Base","sourcesContent":["<template>\r\n  <div id=\"cbbPosition\" class=\"m-combobox\" style=\"width: 260px\">\r\n    <input\r\n      type=\"text\"\r\n      class=\"m-combobox-input\"\r\n      v-model=\"selectedItem[itemText]\"\r\n      @input=\"comboboxOnInput($event.target.value)\"\r\n    />\r\n    <button class=\"m-combobox-button\">\r\n      <div class=\"arrow\" @click=\"arrowBtnOnClick\"></div>\r\n    </button>\r\n    <div class=\"m-combobox-select\" :class=\"{ 'd-none': isHideItem }\">\r\n      <div\r\n        class=\"m-combobox-item\"\r\n        :class=\"{ 'm-item-selected': item[itemId] == selectedItem[itemId] }\"\r\n        v-for=\"item in filteredItems\"\r\n        :key=\"item[itemId]\"\r\n        @click=\"itemOnClick(item)\"\r\n      >\r\n        {{ item[itemText] }}\r\n      </div>\r\n      <!-- <div class=\"m-combobox-item\" value=\"1\">Kinh doanh</div>\r\n      <div class=\"m-combobox-item\" value=\"2\">Nhân sự</div>\r\n      <div class=\"m-combobox-item m-item-selected\" value=\"3\">Phát triển</div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Resources from \"../../scripts/Resources\";\r\nexport default {\r\n  name: \"BaseCombobox\",\r\n  props: {\r\n    itemId: String,\r\n    itemText: String,\r\n    myUrl: String,\r\n    originId:String\r\n    // comboboxItems:Array,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      comboboxItems: [],\r\n      filteredItems: [],\r\n      isHideItem: true,\r\n      selectedItem: {},\r\n    };\r\n  },\r\n  created() {\r\n    this.loadDataCombobox();\r\n  },\r\n  watch:{\r\n    originId:function(){\r\n      console.log(\"loadorigin\",this.originId);\r\n      this.loadDataCombobox();\r\n    }\r\n  },\r\n/*   mounted() {\r\n    console.log(this.comboboxItems);\r\n    this.filteredItems = this.comboboxItems;\r\n  }, */\r\n\r\n  methods: {\r\n    /**\r\n     * Sự kiện bấm mũi tên hiển thị list item\r\n     */\r\n    arrowBtnOnClick() {\r\n      this.isHideItem = !this.isHideItem;\r\n    },\r\n    /**\r\n     * Tìm item được truyền về từ đối tượng của hàm sửa\r\n     */\r\n    initValueCombobox(){\r\n      for(let item of this.comboboxItems){\r\n        if(item[this.itemId] == this.originId){\r\n          this.itemOnClick(item);\r\n        }\r\n      }\r\n    },\r\n\r\n    itemOnClick(item) {\r\n      let tmpObj = {};\r\n      Object.assign(tmpObj, item);\r\n      this.selectedItem = tmpObj;\r\n      this.$emit(\"input\", item[this.itemId]);\r\n      this.isHideItem = true;\r\n    },\r\n    /**\r\n     * Sự kiện nhập ô input của combobox tìm kết quả tương ứng\r\n     */\r\n    comboboxOnInput(value) {\r\n      console.log(value);\r\n      this.isHideItem = false;\r\n      let newFilteredItems = [];\r\n      if (value) {\r\n        for (let item of this.comboboxItems) {\r\n          if (item[this.itemText].includes(value)) {\r\n            newFilteredItems.push(item);\r\n          }\r\n        }\r\n        /*  if (!newFilteredItems.length) {\r\n          let emptyItem = {};\r\n          emptyItem[this.itemId] = -1;\r\n          emptyItem[this.itemText] = \"Không có kết quả phù hợp\";\r\n          newFilteredItems = [emptyItem];\r\n        } */\r\n        this.filteredItems = newFilteredItems;\r\n      } else {\r\n        this.filteredItems = this.comboboxItems;\r\n      }\r\n    },\r\n    resetCombobox(){\r\n      this.selectedItem = {};\r\n    },\r\n    /**\r\n     * Load data Khởi tạo cho Combobox\r\n     */\r\n    async loadDataCombobox() {\r\n      this.resetCombobox();\r\n      switch (this.itemText) {\r\n        case \"GenderName\":\r\n          this.comboboxItems = [\r\n            {\r\n              Gender: \"0\",\r\n              GenderName: Resources.VN.Gender.Female,\r\n            },\r\n            {\r\n              Gender: \"1\",\r\n              GenderName: Resources.VN.Gender.Male,\r\n            },\r\n          ];\r\n          break;\r\n        case \"WorkStatusName\":\r\n          this.comboboxItems = [\r\n            {\r\n              WorkStatus: \"0\",\r\n              WorkStatusName: Resources.VN.WorkStatus.Testing,\r\n            },\r\n            {\r\n              WorkStatus: \"1\",\r\n              WorkStatusName: Resources.VN.WorkStatus.Working,\r\n            },\r\n            {\r\n              WorkStatus: \"2\",\r\n              WorkStatusName: Resources.VN.WorkStatus.Quitted,\r\n            },\r\n          ];\r\n          break;\r\n        default:\r\n          if (this.myUrl) {\r\n            await axios\r\n              .get(`${this.myUrl}`)\r\n              .then((respone) => {\r\n                this.comboboxItems = respone.data;\r\n                \r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n              });\r\n          }\r\n          break;\r\n      }\r\n      this.filteredItems = this.comboboxItems;\r\n      this.initValueCombobox();\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n@import \"../../styles/Common/common.css\";\r\n</style>"]}]}